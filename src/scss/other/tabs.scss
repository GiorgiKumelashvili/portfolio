@import '../core/variables.scss';
@import '../core/mixins.scss';

// colors
$accent: $primary;
$accent-desaturated: desaturate($accent, 85%);

$tab-count: 4;
$breakpoints: (
	medium: #{$tab-count * 250px},
	small: #{$tab-count * 150px},
);

.tabs {
	position: relative;
	height: 250px;
	border-radius: 5px;
	min-width: #{$tab-count * 60px};

	input[name='tab-control'] {
		display: none;
	}

	ul {
		list-style-type: none;
		padding-left: 0;
		display: flex;
		flex-direction: row;
		margin-bottom: 10px;
		justify-content: space-between;
		align-items: flex-end;
		flex-wrap: wrap;

		li {
			box-sizing: border-box;
			flex: 1;
			width: #{calc(100% / $tab-count)};
			// padding: 0 10px;
			text-align: center;

			label {
				cursor: pointer;
				color: $accent-desaturated;
				padding: 5px auto;
				transition: all 0.2s ease-in-out;
				overflow: hidden;
				text-overflow: ellipsis;
				white-space: nowrap;
				display: block;

				@include text-secondary();

				br {
					display: none;
				}

				svg {
					fill: $accent-desaturated;
					height: 1.2em;
					vertical-align: bottom;
					margin-right: 0.2em;
					transition: all 0.2s ease-in-out;
				}

				&:hover,
				&:focus,
				&:active {
					outline: 0;
					color: lighten($accent-desaturated, 15%);
					svg {
						fill: lighten($accent-desaturated, 15%);
					}
				}
			}
		}
	}

	.slider {
		position: relative;
		width: #{calc(100% / $tab-count)};
		transition: all 0.33s cubic-bezier(0.38, 0.8, 0.32, 1.07);

		.indicator {
			position: relative;
			width: 100%;
			height: 1px;
			background: $accent;
			border-radius: 2px;
		}
	}

	.tab-content {
		height: 100%;
		padding-top: 20px;

		section {
			display: none; // for animation

			height: 100%;
			animation: content 0.3s ease-in-out 1 normal;
		}
	}

	input[name='tab-control'] {
		// selectors relative to radio inputs
		$label-selector: '~ ul > li';
		$slider-selector: '~ .slider';
		$content-selector: '~ .tab-content > section';

		@for $i from 1 through $tab-count {
			&:nth-of-type(#{$i}):checked {
				#{$label-selector}:nth-child(#{$i}) {
					> label {
						cursor: default;
						color: $accent !important;

						svg {
							fill: $accent;
						}
					}
				}

				#{$slider-selector} {
					transform: translateX(#{100% * ($i - 1)});
				}

				#{$content-selector}:nth-child(#{$i}) {
					display: block;
				}
			}
		}
	}

	@keyframes content {
		from {
			opacity: 0;
			transform: translateY(5%);
		}
		to {
			opacity: 1;
			transform: translateY(0%);
		}
	}

	@media (max-width: map-get($breakpoints, small)) {
		ul li label {
			padding: 5px;
			border-radius: 5px;

			span {
				display: none;
			}
		}

		.slider {
			display: none;
		}
	}
}
